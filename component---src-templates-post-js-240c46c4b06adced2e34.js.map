{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:///./src/utils/media.js","webpack:///./config/SiteConfig.js","webpack:///./src/components/Article.js","webpack:///./src/components/Button.js","webpack:///./src/components/Header.js","webpack:///./config/Theme.js","webpack:///./src/components/Layout.js","webpack:///./src/components/PrevNext.js","webpack:///./src/components/SectionTitle.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Subline.js","webpack:///./src/components/Wrapper.js","webpack:///./src/components/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","postQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","styled_components__WEBPACK_IMPORTED_MODULE_4__","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_5__","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_5___default","components__WEBPACK_IMPORTED_MODULE_6__","_utils_media__WEBPACK_IMPORTED_MODULE_7__","_config_SiteConfig__WEBPACK_IMPORTED_MODULE_8__","_config_SiteConfig__WEBPACK_IMPORTED_MODULE_8___default","Content","styled","article","withConfig","displayName","componentId","props","theme","colors","bg","media","tablet","phone","Title","h1","PostContent","div","Post","_props$pageContext","pageContext","slug","prev","next","postNode","data","markdownRemark","post","frontmatter","a","createElement","postPath","postSEO","title","config","siteTitle","to","date","timeToRead","kebabCase","category","dangerouslySetInnerHTML","__html","html","propTypes","PropTypes","shape","string","isRequired","object","defaultProps","module","exports","pathPrefix","siteTitleAlt","siteUrl","siteLanguage","siteBanner","favicon","siteDescription","author","siteLogo","userTwitter","ogSiteName","ogLanguage","themeColor","backgroundColor","headerFontFamily","bodyFontFamily","baseFontSize","h2","Initiale","span","Excerpt","p","Article","_ref","excerpt","firstChar","charAt","react_default","gatsby_browser_entry","components_Subline","number","Button","button","primary","big","transitions","normal","lighten","Wrapper","header","darken","Header","children","oneOfType","array","node","grey","dark","default","light","ultraLight","fontSize","small","GlobalStyle","createGlobalStyle","_templateObject","Layout","footer","query","render","styled_components_browser_esm","Fragment","components_SEO","_1719855500","Prev","Next","PrevNext","PrevNext_Wrapper","fields","SectionTitle","SEO","description","image","postURL","realPrefix","blogURL","schemaOrgJSONLD","@context","@type","@id","url","name","alternateName","headline","datePublished","dateModified","publisher","logo","isPartOf","mainEntityOfPage","Helmet_default","lang","content","type","JSON","stringify","property","siteFBAppID","bool","Subline","sectionTitle","components_Article","components_Button","components_Header","components_Layout","components_PrevNext","components_SectionTitle","components_Wrapper"],"mappings":"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","file":"component---src-templates-post-js-240c46c4b06adced2e34.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport kebabCase from 'lodash/kebabCase';\nimport { Layout, Wrapper, Header, Subline, SEO, PrevNext } from 'components';\nimport { media } from '../utils/media';\nimport config from '../../config/SiteConfig';\nimport '../utils/prismjs-theme.css';\n\nconst Content = styled.article`\n  grid-column: 2;\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\n  max-width: 1000px;\n  border-radius: 1rem;\n  padding: 2rem 4rem;\n  background-color: ${props => props.theme.colors.bg};\n  z-index: 9000;\n  margin-top: -3rem;\n  @media ${media.tablet} {\n    padding: 3rem 3rem;\n  }\n  @media ${media.phone} {\n    padding: 2rem 1.5rem;\n  }\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 1rem;\n`;\n\nconst PostContent = styled.div`\n  margin-top: 4rem;\n`;\n\nconst Post = props => {\n  const { slug, prev, next } = props.pageContext;\n  const postNode = props.data.markdownRemark;\n  const post = postNode.frontmatter;\n\n  return (\n    <Layout>\n      <Wrapper>\n        <SEO postPath={slug} postNode={postNode} postSEO />\n        <Helmet title={`${post.title} | ${config.siteTitle}`} />\n        <Header>\n          <Link to=\"/\">{config.siteTitle}</Link>\n        </Header>\n        <Content>\n          <Title>{post.title}</Title>\n          <Subline>\n            {post.date} &mdash; {postNode.timeToRead} Min Read &mdash; In{' '}\n            <Link to={`/categories/${kebabCase(post.category)}`}>{post.category}</Link>\n          </Subline>\n          <PostContent dangerouslySetInnerHTML={{ __html: postNode.html }} />\n          <PrevNext prev={prev} next={next} />\n        </Content>\n      </Wrapper>\n    </Layout>\n  );\n};\n\nexport default Post;\n\nPost.propTypes = {\n  pageContext: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    next: PropTypes.object,\n    prev: PropTypes.object,\n  }),\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nPost.defaultProps = {\n  pageContext: PropTypes.shape({\n    next: null,\n    prev: null,\n  }),\n};\n\nexport const postQuery = graphql`\n  query postBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      frontmatter {\n        title\n        date(formatString: \"DD.MM.YYYY\")\n        category\n      }\n      timeToRead\n    }\n  }\n`;\n","const sizes = {\n  tablet: '1200px',\n  phone: '600px',\n};\n\nexport const media = {\n  tablet: `(max-width: ${sizes.tablet})`,\n  phone: `(max-width: ${sizes.phone})`,\n};\n","module.exports = {\n  pathPrefix: '/', // Prefix for all links. If you deploy your site to example.com/portfolio your pathPrefix should be \"portfolio\"\n\n  siteTitle: 'Blog', // Navigation and Site Title\n  siteTitleAlt: 'Blog - Ahmet Açıkgöz', // Alternative Site title for SEO\n  siteUrl: 'https://ahmetacikgoz.github.io', // Domain of your site. No trailing slash!\n  siteLanguage: 'en', // Language Tag on <html> element\n  siteBanner: '/social/banner.jpg', // Your image for og:image tag. You can find it in the /static folder\n  favicon: 'src/favicon.png', // Your image for favicons. You can find it in the /src folder\n  siteDescription: 'Blog - Ahmet Açıkgöz', // Your site description\n  author: 'ahmetacikgoz', // Author for schemaORGJSONLD\n  siteLogo: '/social/logo.png', // Image for schemaORGJSONLD\n\n  // siteFBAppID: '123456789', // Facebook App ID - Optional\n  userTwitter: '@4HM37', // Twitter Username - Optional\n  ogSiteName: 'minimal', // Facebook Site Name - Optional\n  ogLanguage: 'en_US', // Facebook Language\n\n  // Manifest and Progress color\n  // See: https://developers.google.com/web/fundamentals/web-app-manifest/\n  themeColor: '#3498DB',\n  backgroundColor: '#2b2e3c',\n\n  // Settings for typography.js\n  headerFontFamily: 'Bitter',\n  bodyFontFamily: 'Open Sans',\n  baseFontSize: '18px',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport { Subline } from 'components';\n\nconst Post = styled.article`\n  display: flex;\n  flex-direction: column;\n  margin-top: 3.5rem;\n  margin-bottom: 3.5rem;\n`;\n\nconst Title = styled.h2`\n  position: relative;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.75rem;\n`;\n\nconst Initiale = styled.span`\n  position: absolute;\n  font-size: 7rem;\n  transform: translate(-50%, -50%);\n  opacity: 0.08;\n  user-select: none;\n  z-index: -1;\n`;\n\nconst Excerpt = styled.p`\n  grid-column: -1 / 1;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst Article = ({ title, date, excerpt, slug, timeToRead, category }) => {\n  const firstChar = title.charAt(0);\n\n  return (\n    <Post>\n      <Title>\n        <Initiale>{firstChar}</Initiale>\n        <Link to={slug}>{title}</Link>\n      </Title>\n      <Subline>\n        {date} &mdash; {timeToRead} Min Read &mdash; In{' '}\n        <Link to={`/categories/${kebabCase(category)}`}>{category}</Link>\n      </Subline>\n      <Excerpt>{excerpt}</Excerpt>\n    </Post>\n  );\n};\n\nexport default Article;\n\nArticle.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  excerpt: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  category: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { lighten } from 'polished';\n\nconst Button = styled.button`\n  background: ${props => props.theme.colors.primary};\n  border: none;\n  display: inline-flex;\n  align-items: center;\n  border-radius: ${props => (props.big ? '1.5rem' : '1rem')};\n  font-size: ${props => (props.big ? '1.2rem' : '1rem')};\n  color: white;\n  padding: ${props => (props.big ? '0.35rem 1.6rem' : '0.25rem 1.5rem')};\n  transition: all ${props => props.theme.transitions.normal};\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\n  &:hover {\n    background: ${props => lighten(0.05, props.theme.colors.primary)};\n    cursor: pointer;\n    transform: translateY(-2px);\n  }\n  &:focus {\n    outline: none;\n  }\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-right: 0.75rem;\n    fill: white;\n  }\n`;\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { darken, lighten } from 'polished';\n\nconst Wrapper = styled.header`\n  background: linear-gradient(\n    45deg,\n    ${props => darken(0.1, props.theme.colors.primary)},\n    ${props => lighten(0.1, props.theme.colors.primary)}\n  );\n  grid-column: 1 / -1;\n  margin-left: -1rem;\n  margin-right: -1rem;\n  padding: 2rem 2rem 5rem 2rem;\n  box-shadow: inset 0px -10px 30px 0px rgba(0, 0, 0, 0.1);\n`;\n\nconst Content = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n\n  a {\n    color: white;\n    &:hover {\n      opacity: 0.85;\n      color: white;\n    }\n  }\n`;\n\nconst Header = props => (\n  <Wrapper>\n    <Content>{props.children}</Content>\n  </Wrapper>\n);\n\nexport default Header;\n\nHeader.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]).isRequired,\n};\n","const colors = {\n  primary: '#d02e77', // Color for buttons or links\n  bg: 'white', // Background color\n  grey: {\n    dark: 'rgba(0, 0, 0, 0.9)',\n    default: 'rgba(0, 0, 0, 0.7)',\n    light: 'rgba(0, 0, 0, 0.5)',\n    ultraLight: 'rgba(0, 0, 0, 0.25)',\n  },\n};\n\nconst transitions = {\n  normal: '0.5s',\n};\n\nconst fontSize = {\n  small: '0.9rem',\n};\n\nconst theme = {\n  colors,\n  transitions,\n  fontSize,\n};\n\nexport default theme;\n","/* eslint no-unused-expressions:0 */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components';\r\nimport { SEO } from 'components';\r\nimport theme from '../../config/Theme';\r\nimport { media } from '../utils/media';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ::selection {\r\n    color: ${theme.colors.bg};\r\n    background: ${theme.colors.primary};\r\n  }\r\n  body {\r\n    background: ${theme.colors.bg};\r\n    color: ${theme.default};\r\n    @media ${media.phone} {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n  a {\r\n    color: ${theme.colors.grey.dark};\r\n    text-decoration: none;\r\n    transition: all ${theme.transitions.normal};\r\n  }\r\n  a:hover {\r\n    color: ${theme.colors.primary};\r\n  }\r\n  h1, h2, h3, h4 {\r\n    color: ${theme.colors.grey.dark};\r\n  }\r\n  blockquote {\r\n    font-style: italic;\r\n    position: relative;\r\n  }\r\n\r\n  blockquote:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    background: ${theme.colors.primary};\r\n    height: 100%;\r\n    width: 6px;\r\n    margin-left: -1.6rem;\r\n  }\r\n  label {\r\n    margin-bottom: .5rem;\r\n    color: ${theme.colors.grey.dark};\r\n  }\r\n  input, textarea {\r\n    border-radius: .5rem;\r\n    border: none;\r\n    background: rgba(0, 0, 0, 0.05);\r\n    padding: .25rem 1rem;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Footer = styled.footer`\r\n  text-align: center;\r\n  padding: 3rem 0;\r\n  span {\r\n    font-size: 0.75rem;\r\n  }\r\n`;\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query LayoutQuery {\r\n        site {\r\n          buildTime(formatString: \"DD.MM.YYYY\")\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <ThemeProvider theme={theme}>\r\n        <React.Fragment>\r\n          <SEO />\r\n          <GlobalStyle />\r\n          {children}\r\n        </React.Fragment>\r\n      </ThemeProvider>\r\n    )}\r\n  />\r\n);\r\n\r\nexport default Layout;\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]).isRequired,\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 6rem auto 0 auto;\n  a {\n    color: ${props => props.theme.colors.primary};\n    display: flex;\n    align-items: center;\n  }\n  justify-items: center;\n`;\n\nconst Prev = styled.div`\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\nconst Next = styled.div`\n  margin-left: auto;\n  text-align: right;\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\nconst PrevNext = ({ next, prev }) => (\n  <Wrapper>\n    {prev && (\n      <Prev>\n        <span>Previous</span>\n        <Link to={prev.fields.slug}>{prev.frontmatter.title}</Link>\n      </Prev>\n    )}\n\n    {next && (\n      <Next>\n        <span>Next</span>\n        <Link to={next.fields.slug}>{next.frontmatter.title}</Link>\n      </Next>\n    )}\n  </Wrapper>\n);\n\nexport default PrevNext;\n\nPrevNext.propTypes = {\n  next: PropTypes.object,\n  prev: PropTypes.object,\n};\n\nPrevNext.defaultProps = {\n  next: null,\n  prev: null,\n};\n","import styled from 'styled-components';\n\nconst SectionTitle = styled.div`\n  font-size: ${props => props.theme.fontSize.small};\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: center;\n  color: ${props => props.theme.colors.grey.dark};\n  position: relative;\n  padding-bottom: 1rem;\n  margin-bottom: 4rem;\n\n  &:after {\n    content: '';\n    height: 1px;\n    width: 50px;\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    margin-left: -25px;\n    background: ${props => props.theme.colors.grey.ultraLight};\n  }\n`;\n\nexport default SectionTitle;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport config from '../../config/SiteConfig';\n\nconst SEO = props => {\n  const { postNode, postPath, postSEO } = props;\n  let title;\n  let description;\n  let image;\n  let postURL;\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix;\n  if (postSEO) {\n    const postMeta = postNode.frontmatter;\n    title = postMeta.title; // eslint-disable-line prefer-destructuring\n    description = postNode.excerpt;\n    image = config.siteBanner;\n    postURL = config.siteUrl + realPrefix + postPath;\n  } else {\n    title = config.siteTitle;\n    description = config.siteDescription;\n    image = config.siteBanner;\n  }\n  image = config.siteUrl + realPrefix + image;\n  const blogURL = config.siteUrl + config.pathPrefix;\n  let schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      '@id': blogURL,\n      url: blogURL,\n      name: title,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    },\n  ];\n  if (postSEO) {\n    schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        '@id': postURL,\n        url: postURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image,\n        },\n        description,\n        datePublished: postNode.frontmatter.date,\n        dateModified: postNode.frontmatter.date,\n        author: {\n          '@type': 'Person',\n          name: config.author,\n        },\n        publisher: {\n          '@type': 'Organization',\n          name: config.author,\n          logo: {\n            '@type': 'ImageObject',\n            url: config.siteUrl + realPrefix + config.siteLogo,\n          },\n        },\n        isPartOf: blogURL,\n        mainEntityOfPage: {\n          '@type': 'WebSite',\n          '@id': blogURL,\n        },\n      },\n    ];\n  }\n  return (\n    <Helmet>\n      <html lang={config.siteLanguage} />\n      <title>{config.siteTitle}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n      <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\n      <meta property=\"og:locale\" content={config.ogLanguage} />\n      <meta property=\"og:site_name\" content={config.ogSiteName ? config.ogSiteName : ''} />\n      <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n      {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"fb:app_id\" content={config.siteFBAppID ? config.siteFBAppID : ''} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={config.userTwitter ? config.userTwitter : ''} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:url\" content={config.siteUrl} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n    </Helmet>\n  );\n};\n\nexport default SEO;\n\nSEO.propTypes = {\n  postNode: PropTypes.object,\n  postPath: PropTypes.string,\n  postSEO: PropTypes.bool,\n};\n","import styled from 'styled-components';\n\nconst Subline = styled.div`\n  font-size: ${props => props.theme.fontSize.small};\n  color: ${props => props.theme.colors.grey.light};\n  ${props => props.sectionTitle && 'margin-top: -3rem'};\n  ${props => props.sectionTitle && 'margin-bottom: 4rem'};\n  ${props => props.sectionTitle && 'text-align: center'};\n`;\n\nexport default Subline;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr minmax(320px, 1000px) 1fr;\n  padding: 0 1rem;\n`;\n\nexport default Wrapper;\n","import Article from './Article';\nimport Button from './Button';\nimport Header from './Header';\nimport Layout from './Layout';\nimport PrevNext from './PrevNext';\nimport SectionTitle from './SectionTitle';\nimport SEO from './SEO';\nimport Subline from './Subline';\nimport Wrapper from './Wrapper';\n\nexport { Article, Button, Header, Layout, PrevNext, SectionTitle, SEO, Subline, Wrapper };\n"],"sourceRoot":""}